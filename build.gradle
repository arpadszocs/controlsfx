apply plugin: 'java'
apply plugin: 'maven'
apply from: 'mavenPublish.gradle'

group = 'org.controlsfx'
version = '8.0.2-SNAPSHOT'

configurations {
    samples.extendsFrom mainRuntime
    jdk
}

sourceSets {
    main {
        compileClasspath += configurations.jdk
    }
    samples {
        java {
            compileClasspath += main.output
            compileClasspath += configurations.jdk
        }
    }
}

dependencies {
    try {
        jdk files(jfxrtJar)
    } catch (MissingPropertyException pne) {
        jdk files("${System.properties['java.home']}/lib/jfxrt.jar")
        jdk files("${System.properties['java.home']}/lib/ext/jfxrt.jar")
    }
}

javadoc {
    exclude 'impl/*'
    failOnError = false
    classpath = project.sourceSets.main.runtimeClasspath + configurations.jdk
    
    options.windowTitle("ControlsFX Project ${version}")
    options.links("http://download.oracle.com/javase/7/docs/api/");
    options.links("http://docs.oracle.com/javafx/2/api/");
    options.addBooleanOption("Xdoclint:none").setValue(true);
    
    // All doc-files are located in src/main/docs because Gradle's javadoc doesn't copy
    // over the doc-files if they are embedded with the sources. I find this arrangement
    // somewhat cleaner anyway (never was a fan of mixing javadoc files with the sources)
    doLast {
        copy {
            from "src/main/docs"
            into "$buildDir/docs/javadoc"
        }
    }
}

jar {
    exclude '**/16/*'
    exclude '**/32/*'
    exclude '**/64/*'
    exclude '**/128/*'
    exclude '**/oxygen/svg/*'
}

task jarSamples (type: Jar) {
    classifier='samples'
    from sourceSets.samples.output
    manifest {
        attributes(
            'Main-Class': 'org.controlsfx.HelloControlsFX'
        )
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    dependsOn javadoc
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}

artifacts {
    archives sourceJar
    archives javadocJar
    archives jarSamples
}

['HelloControlsFX'/*, 'HelloGridView', 'HelloRangeSlider', 'HelloRating', 'HelloSegmentedButton', 'HelloToggleSwitch', 'SVGTest'*/].each { name ->
    task "$name" (type: JavaExec) {
        main = "org.controlsfx.$name"
        classpath = sourceSets.samples.runtimeClasspath + sourceSets.main.runtimeClasspath + configurations.jdk
    }
}