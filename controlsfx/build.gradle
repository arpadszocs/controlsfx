import org.apache.tools.ant.filters.*

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'maven'

apply from: 'mavenPublish.gradle'

Properties commons = new Properties()
commons.load(new FileInputStream("$rootDir/../controlsfx-build.properties"))

group = commons.controlsfx_group
version = commons.controlsfx_version

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    jdk
}

sourceSets {
    main {
        compileClasspath += configurations.jdk
    }
}

dependencies {
    try {
        jdk files(jfxrtJar)
    } catch (MissingPropertyException pne) {
        // javafx plugin will provide in this case
    }
}

task native2ascii(type: Copy) {
    from"src/main/resources"
    into "$buildDir/resources/main"
    include '**/*.properties'
    filter(EscapeUnicode)
}

jar.dependsOn(native2ascii)

task generatei18nResources(type: Copy) {
    from "src/main/resources"
    into "$buildDir/resources/main"
    include "controlsfx.properties"
    rename{ String fileName -> fileName.replace("fx.prop", "fx_en.prop") }
}

processResources.dependsOn(generatei18nResources)

javadoc {
    exclude 'impl/*'
    failOnError = false
    classpath = project.sourceSets.main.runtimeClasspath + configurations.jdk
    
    options.windowTitle("ControlsFX Project ${version}")
    options.links("http://docs.oracle.com/javase/8/docs/api/");
    options.links("http://docs.oracle.com/javase/8/javafx/api/");
    options.addBooleanOption("Xdoclint:none").setValue(true);
    options.overview("src/main/docs/overview.html");
    
    // All doc-files are located in src/main/docs because Gradle's javadoc doesn't copy
    // over the doc-files if they are embedded with the sources. I find this arrangement
    // somewhat cleaner anyway (never was a fan of mixing javadoc files with the sources)
    doLast {
        copy {
            from "src/main/docs"
            into "$buildDir/docs/javadoc"
        }
    }
}

jar {
    //exclude '**/16/*'
    exclude '**/32/*'
    exclude '**/64/*'
    exclude '**/128/*'
    exclude '**/oxygen/svg/*'

    manifest { // the manifest of the default jar is of type OsgiManifest
        attributes 'Implementation-Title': 'ControlsFX', 'Implementation-Version': project.version, 'Bundle-Name': 'ControlsFX'
        instruction 'Bundle-Description', 'High quality UI controls and other tools to complement the core JavaFX distribution'        
        instruction 'Export-Package',
                '!impl.org.controlsfx.*',
                'org.controlsfx.*'
    }
}


task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    dependsOn javadoc
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

artifacts {
    archives sourceJar
    archives javadocJar
}

