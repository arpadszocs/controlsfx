apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

apply from: 'mavenPublish.gradle'
apply from: 'javafx.plugin'

group = 'org.controlsfx'
version = '8.0.3-SNAPSHOT'

applicationName = 'FXSampler'
mainClassName = "fxsampler.FXSampler"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
    jdk
}

sourceSets {
    main {
        compileClasspath += configurations.jdk
    }
}

dependencies {
    compile "org.controlsfx:fxsampler:1.0.0-SNAPSHOT"
    compile "org.controlsfx:controlsfx:8.0.3-SNAPSHOT"

    try {
        jdk files(jfxrtJar)
    } catch (MissingPropertyException pne) {
        // javafx plugin will provide in this case
    }
}


task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

artifacts {
    archives sourceJar
    //archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

// enumerate the samples at build time
task enumerateSamples() {
    doLast {
        def samplesList = []
        sourceSets.main.java.visit {
            // could be improved:  we could load the class and check the hierarchy
            if (!it.directory && it.file.text.contains(' extends SampleBase ') && it.path.contains("samples")) {
                samplesList += it.path
            }
        }
        println samplesList
        File outputFile = new File(sourceSets.main.output.resourcesDir, 'fxsampler/samples/samples.txt')
        outputFile.parentFile.mkdirs()
        outputFile.text = samplesList.join('\n')
    }
}

processResources.dependsOn(enumerateSamples)
gradle.taskGraph.whenReady {
    enumerateSamples.enabled = gradle.taskGraph.hasTask(":$project.name:jfxDeploy")
}


jfxJar {
    classpath = files(
            (project.sourceSets.main.compileClasspath .files
                    - project.configurations['providedCompile'].files.findAll {it.file})
                    + jar.archivePath
    )
}

javafx {
    try {
        jfxrtJar = ext.jfxrtJar
    } catch (MissingPropertyException pne) {
        // ignore
    }

    appID 'HelloControlsFX'
    appName 'Hello ControlsFX'
    mainClass 'fxsampler.FXSampler'

    javaRuntime = '<NO RUNTIME>' // for now don't bundle a VM

    // deploy/info attributes
    category = 'JavaFX Demos'
    copyright = 'Copyright (c) 2013 Jonathan Giles and others'
    description = 'This is a sample of all of the ControlsFX controls'
    licenseType = '3 clause BSD'
    vendor = 'FX Experience'
}
